namespace PriorityQueueHomework
{
    internal class Program
    {
        /******************************************************
		 * 힙 (Heap)
		 * 
		 * 이진트리 형태의 자료구조(토너먼트 생각하면 편함)
		 * 우선순위Queue
		 * 부모 노드가 항상 자식노드보다 우선순위가 높은 속성을 만족하는 트리기반의 자료구조
		 * 많은 자료 중 우선순위가 가장 높은 요소를 빠르게 가져오기 위해 사용
		 * 
		 * 트리구조 조건
		 * 하나의 부모노드가 여러개의 자식노드를 가질 수 있다.
		 * 자식노드가 부모노드를 가리키는 순환구조(역순)가 아니여야 한다.
		 * 순환구조이면 그래프라고 함
		 * 트리나 그래프들은 순서가 없는 비선형 자료구조
		 * 
		 * C# 에서 힙을 만들 때 노드 사용을 지양하기 위해(가비지 컬렉터 때문)
         *  사용할 때 배열에 노드 순으로 저장해놔도 상관이 없다.
         * 이진트리에서 index * 2 + 1 을 하면 해당 노드의 왼쪽 자식이 나오게 된다.
         * index * 2 + 2 하면 해당 노드의 오른쪽 자식이 나오게 된다.
         * (index - 1) / 2 소숫점을 제외하면 해당 노드의 부모노드가 나오게 된다.
		 * 
		 * 예) 각 상황에 맞는 몬스터의 행동(방어, 공격, 도망 등)
		 ******************************************************/
        static void Main(string[] args)
        {
            Console.WriteLine("Hello, World!");
        }
    }
}