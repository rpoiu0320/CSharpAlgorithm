using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LinkedLiskHomework
{
    internal class LinkedListPreparation
    {
        /******************************************************
		 * 연결리스트 (Linked List)
		 * 
		 * 데이터를 포함하는 노드들을 연결식으로 만든 자료구조
		 * 노드는 데이터와 이전/다음 노드 객체를 참조하고 있음 (다음/이전 데이터의 위치를 각 노드가 참조하고 있음)
		 * 노드가 메모리에 연속적으로 배치되지 않고 이전/다음노드의 위치를 확인
		 * 배열처럼 꽉 차있을 경우가 없음
		 * 힙영역에 연속적으로 두지 않고 따로따로 데이터 저장
		 * 맨 뒤 데이터의 후번 노드는 null
		 * index의 개념은 없음
		 * 
		 * 일발성형 데이터들을 사용할 때 예) 뱀서의 몬스터 생성, 삭제 | 슈팅게임 탄막 | 이펙트들?
		 * 가비지 콜렉터에 부담을 많이 줌, 때문에 C#에서는 노드 기반 자료구조는 잘 사용되지 않음
		 * 삽입, 삭제가 무엇보다 빨라야 할 때 사용
		 * 
		 * 
		 * // <LinkedList의 시간복잡도>
         * 접근		탐색		삽입		삭제
         * O(n)		O(n)	O(1)	O(1)
         *
         * 접근이 O(n)인 이유
         * 데이터들이 파편화 되어있어 배열처럼 데이터의 주소를 계산해서 가는게 아니라 
         * 노드를 따라가 데이터를 찾는 형식이기 때문
		 * 
		 * 
		 * -----------------
		 * | 노 | 데이터 | 노 |
		 * | 드 |       | 드 |
		 * -----------------
		 * 
		 * // [단방향 링크드리스트]
         * 노드가 뒤만 가리킴
		 *
         * [양방향 링크드리스트]
         * 노드가 앞 뒤를 가리킴
		 *
         * [원형(환형) 링크드리스트]
         * 가장 마지막 데이터의 노드가 맨 처음의 데이터를 가리킴
		 ******************************************************/
    }
}
